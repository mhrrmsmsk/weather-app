{"ast":null,"code":"var _jsxFileName = \"/Users/muharremsimsek/Desktop/React/src/weather-app/src/components/WeatherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = ({\n  children\n}) => {\n  _s();\n  const [city, setCity] = useState('Istanbul'); // Default city\n  const [forecast, setForecast] = useState([]);\n  const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat={latitude}&lon={longitude}&exclude=current,minutely,hourly,alerts&appid=${apiKey}&units=metric`);\n        console.log(\"API Response:\", response.data);\n        setForecast(response.data.daily); // Set daily forecast data\n      } catch (error) {\n        console.error(\"Error fetching weather data\", error);\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      forecast,\n      setCity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherProvider, \"vytEBf0GSuUpUWcAqjU8HSggByU=\");\n_c = WeatherProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","city","setCity","forecast","setForecast","apiKey","process","env","REACT_APP_OPENWEATHER_API_KEY","fetchWeather","response","get","console","log","data","daily","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/muharremsimsek/Desktop/React/src/weather-app/src/components/WeatherContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const WeatherContext = createContext();\n\nexport const WeatherProvider = ({ children }) => {\n  const [city, setCity] = useState('Istanbul'); // Default city\n  const [forecast, setForecast] = useState([]);\n  const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n        try {\n          const response = await axios.get(\n            `https://api.openweathermap.org/data/2.5/onecall?lat={latitude}&lon={longitude}&exclude=current,minutely,hourly,alerts&appid=${apiKey}&units=metric`\n          );\n          console.log(\"API Response:\", response.data);\n          setForecast(response.data.daily); // Set daily forecast data\n        } catch (error) {\n          console.error(\"Error fetching weather data\", error);\n        }\n      };\n    fetchWeather();\n  }, [city]);\n\n  return (\n    <WeatherContext.Provider value={{ forecast, setCity }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EAExDf,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAC9B,+HAA+HN,MAAM,eACvI,CAAC;QACDO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAC3CV,WAAW,CAACM,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACHP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,cAAc,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,QAAQ;MAAED;IAAQ,CAAE;IAAAH,QAAA,EACnDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACtB,EAAA,CAzBWF,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}